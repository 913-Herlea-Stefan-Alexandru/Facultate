     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf, fclose
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16                                      
    17 00000000 70726F626C656D3233-         file_name db "problem23.txt", 0
    17 00000009 2E74787400         
    18 0000000E 7700                        access_mode db "w", 0
    19                                      
    20 00000010 FFFFFFFF                    file_descriptor dd -1
    21 00000014 D09A                        n dw 0x9AD0
    22 00000016 0D00                        end_line db 0xD, 0
    23 00000018 2578257300                  format db "%x%s", 0
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; A file name and a hexadecimal number (on 16 bits) are given. Create a file with the given name and write each nibble composing the hexadecimal number on a different line to file.
    29                                      
    30 00000000 68[0E000000]                    push dword access_mode
    31 00000005 68[00000000]                    push dword file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4*2
    34                                          
    35 00000013 A3[10000000]                    mov [file_descriptor], eax
    36                                          
    37 00000018 83F800                          cmp eax, 0
    38 0000001B 7446                            je final
    39                                          
    40 0000001D BB00000000                      mov ebx, 0
    41 00000022 668B1D[14000000]                mov bx, [n]
    42                                          
    43 00000029 B904000000                      mov ecx, 4
    44                                          
    45                                          start_loop:
    46 0000002E 89D8                                mov eax, ebx
    47 00000030 83E00F                              and eax, 1111b
    48 00000033 60                                  pushad
    49                                              
    50 00000034 68[16000000]                        push dword end_line
    51 00000039 50                                  push eax
    52 0000003A 68[18000000]                        push dword format
    53 0000003F FF35[10000000]                      push dword [file_descriptor]
    54 00000045 FF15[00000000]                      call [fprintf]
    55 0000004B 83C410                              add esp, 4*4
    56                                              
    57 0000004E 61                                  popad
    58 0000004F C1EB04                              shr ebx, 4
    59 00000052 E2DA                            loop start_loop
    60                                  
    61 00000054 FF35[10000000]                  push dword [file_descriptor]
    62 0000005A FF15[00000000]                  call [fclose]
    63 00000060 83C404                          add esp, 4
    64                                          
    65                                          final:
    66                                      
    67                                          ; exit(0)
    68 00000063 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    69 00000065 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
