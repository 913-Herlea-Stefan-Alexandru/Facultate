     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fprintf, fclose             ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      
    17 00000000 696E2E74787400              file_in db "in.txt", 0
    18 00000007 6F75742E74787400            file_out db "out.txt", 0
    19 0000000F FFFFFFFF                    file_descriptor dd -1
    20 00000013 7200                        read_access db "r", 0
    21 00000015 6100                        write_access db "a", 0
    22 00000017 <res 00000064>              sentences resb 100
    23 0000007B <res 00000064>              text resb 100
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          
    29 00000000 68[13000000]                    push dword read_access
    30 00000005 68[00000000]                    push dword file_in
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4*2
    33                                          
    34 00000013 A3[0F000000]                    mov [file_descriptor], eax
    35                                          
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 0F84AC000000                    je finish
    38                                          
    39 00000021 FF35[0F000000]                  push dword [file_descriptor]
    40 00000027 6A64                            push dword 100
    41 00000029 6A01                            push dword 1
    42 0000002B 68[17000000]                    push dword sentences
    43 00000030 FF15[00000000]                  call [fread]
    44 00000036 83C410                          add esp, 4*4
    45                                          
    46 00000039 FF35[0F000000]                  push dword [file_descriptor]
    47 0000003F FF15[00000000]                  call [fclose]
    48 00000045 83C404                          add esp, 4
    49                                          
    50 00000048 BB01000000                      mov ebx, 1
    51                                          
    52 0000004D BE[17000000]                    mov esi, sentences
    53 00000052 BF[7B000000]                    mov edi, text
    54                                          
    55                                          repeat:
    56 00000057 AC                                  lodsb
    57                                              
    58 00000058 3C00                                cmp al, 0
    59 0000005A 7471                                je break
    60                                              
    61 0000005C AA                                  stosb
    62                                              
    63 0000005D 3C21                                cmp al, '!'
    64 0000005F 756A                                jne no_add
    65                                              
    66 00000061 89D8                                mov eax, ebx
    67 00000063 BA00000000                          mov edx, 0
    68 00000068 B902000000                          mov ecx, 2
    69 0000006D F7F1                                div ecx
    70                                              
    71 0000006F 83FA00                              cmp edx, 0
    72 00000072 7440                                je empty_text
    73                                              
    74 00000074 68[15000000]                        push dword write_access
    75 00000079 68[07000000]                        push dword file_out
    76 0000007E FF15[00000000]                      call [fopen]
    77 00000084 83C408                              add esp, 4*2
    78                                               
    79 00000087 A3[0F000000]                        mov [file_descriptor], eax
    80                                              
    81 0000008C 83F800                              cmp eax, 0
    82 0000008F 743C                                je finish
    83                                              
    84 00000091 68[7B000000]                        push dword text
    85 00000096 FF35[0F000000]                      push dword [file_descriptor]
    86 0000009C FF15[00000000]                      call [fprintf]
    87 000000A2 83C408                              add esp, 4*2
    88                                              
    89 000000A5 FF35[0F000000]                      push dword [file_descriptor]
    90 000000AB FF15[00000000]                      call [fclose]
    91 000000B1 83C404                              add esp, 4
    92                                              
    93                                              empty_text:
    94 000000B4 BF[7B000000]                        mov edi, text
    95 000000B9 B000                                mov al, 0
    96                                              repeat2:
    97 000000BB 803F00                                  cmp byte [edi], 0
    98 000000BE 7405                                    je exit_repeat2
    99                                                  
   100 000000C0 8807                                    mov [edi], al
   101 000000C2 47                                      inc edi
   102 000000C3 EBF6                                    jmp repeat2
   103                                              exit_repeat2:
   104 000000C5 BF[7B000000]                        mov edi, text
   105 000000CA 43                                  inc ebx
   106                                              no_add:
   107 000000CB EB8A                                jmp repeat
   108                                              
   109                                          break:
   110                                          
   111                                          finish:
   112                                          
   113 000000CD 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   114 000000CF FF15[00000000]                  call    [exit]       ; call exit to terminate the program
