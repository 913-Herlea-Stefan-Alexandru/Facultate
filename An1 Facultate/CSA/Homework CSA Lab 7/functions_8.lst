     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll    ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll 
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15                                      
    16 00000000 0A000000                    a dd 10
    17 00000004 00000000                    b dd 0
    18 00000008 4E756D626572206220-         message db "Number b = ", 0
    18 00000011 3D2000             
    19 00000014 526573756C74206F66-         result db "Result of a+a/b=%d", 0
    19 0000001D 20612B612F623D2564-
    19 00000026 00                 
    20 00000027 256400                      format db "%d", 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; A natural number a (a: dword, defined in the data segment) is given. Read a natural number b from the keyboard and calculate: a + a/b. Display the result of this operation. The values will be displayed in 
    26                                      
    27 00000000 68[08000000]                    push dword message
    28 00000005 FF15[00000000]                  call [printf]
    29 0000000B 83C404                          add esp, 4*1
    30                                          
    31 0000000E 68[04000000]                    push dword b
    32 00000013 68[27000000]                    push dword format
    33 00000018 FF15[00000000]                  call [scanf]
    34 0000001E 83C408                          add esp, 4*2
    35                                          
    36 00000021 A1[00000000]                    mov eax, [a]
    37 00000026 99                              cdq
    38 00000027 F73D[04000000]                  idiv dword [b]
    39 0000002D 0305[00000000]                  add eax, [a]
    40                                          
    41 00000033 50                              push eax
    42 00000034 68[14000000]                    push dword result
    43 00000039 FF15[00000000]                  call [printf]
    44 0000003F 83C408                          add esp, 4*2
    45                                          
    46                                          ; exit(0)
    47 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
