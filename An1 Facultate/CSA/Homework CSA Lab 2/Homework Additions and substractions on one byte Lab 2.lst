     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15 00000000 80                          a db 128
    16 00000001 0A                          b db 10
    17 00000002 08                          c db 8
    18 00000003 19                          d db 25
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24                                      
    25 00000000 A0[00000000]                    mov al, [a]
    26 00000005 0205[01000000]                  add al, [b]
    27 0000000B 2A05[03000000]                  sub al, [d]
    28 00000011 8A1D[00000000]                  mov bl, [a]
    29 00000017 2A1D[01000000]                  sub bl, [b]
    30 0000001D 2A1D[03000000]                  sub bl, [d]
    31 00000023 00D8                            add al, bl
    32                                          
    33 00000025 A0[00000000]                    mov al, [a]
    34 0000002A 2A05[02000000]                  sub al, [c]
    35 00000030 8A1D[01000000]                  mov bl, [b]
    36 00000036 021D[01000000]                  add bl, [b]
    37 0000003C 021D[03000000]                  add bl, [d]
    38 00000042 00D8                            add al, bl 
    39                                          
    40                                          ; exit(0)
    41 00000044 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000046 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
