     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15 00000000 17                          a db 23
    16 00000001 0B                          b db 11
    17 00000002 12                          c db 18
    18 00000003 2500                        d dw 37
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; (100*a+d+5-75*b)/(c-5)
    24                                          
    25 00000000 B064                            mov al, 100
    26 00000002 F625[00000000]                  mul byte [a]
    27 00000008 660305[03000000]                add ax, [d]
    28 0000000F 6683C005                        add ax, 5
    29 00000013 6689C3                          mov bx, ax
    30 00000016 B04B                            mov al, 75
    31 00000018 8A0D[01000000]                  mov cl, [b]
    32 0000001E F6E1                            mul cl
    33 00000020 6629C3                          sub bx, ax
    34 00000023 6689D8                          mov ax, bx
    35 00000026 8A1D[02000000]                  mov bl, [c]
    36 0000002C 80EB05                          sub bl, 5
    37 0000002F F6F3                            div bl
    38                                          
    39                                          ; [(a+b)*3-c*2]+d
    40                                  
    41 00000031 A0[00000000]                    mov al, [a]
    42 00000036 0205[01000000]                  add al, [b]
    43 0000003C B103                            mov cl, 3
    44 0000003E F6E1                            mul cl
    45 00000040 6689C3                          mov bx, ax
    46 00000043 A0[02000000]                    mov al, [c]
    47 00000048 B102                            mov cl, 2
    48 0000004A F6E1                            mul cl
    49 0000004C 6629C3                          sub bx, ax
    50 0000004F 6689D8                          mov ax, bx
    51 00000052 660305[03000000]                add ax, [d]
    52                                      
    53                                          ; exit(0)
    54 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    55 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
